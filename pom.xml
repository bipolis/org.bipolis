<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.bipolis</groupId>
	<artifactId>org.bipolis</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>The Main project</description>
	<organization>
		<name>bipolis</name>
		<url>https://bipolis.org/</url>
	</organization>
	<distributionManagement>
		<repository>
			<id>bipolis</id>
			<name></name>
			<url>https://mvn.bipolis.org</url>
		</repository>
	</distributionManagement>
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<bnd.version>5.1.2</bnd.version>
	</properties>
	<repositories>
		<repository>
			<id>OSGi</id>
			<name>OSGi public binaries</name>
			<url>https://oss.sonatype.org/content/groups/osgi</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Releases</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Apache Snapshots</id>
			<url>https://repository.apache.org/content/groups/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.osgi-api</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.osgi-impl</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.bundles-jakarta</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.bundles-gogo</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>runtume</scope>
			</dependency>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.test-unit</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.bipolis</groupId>
				<artifactId>org.bipolis.indexes.test-integration</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.0</version>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<configuration>
								<checkstyleRules>
									<module name="Checker">
										<property name="charset" value="UTF-8" />
										<property name="severity" value="warning" />
										<property name="fileExtensions"
											value="java, properties, xml" />
										<!-- Checks for whitespace -->
										<!-- See http://checkstyle.sf.net/config_whitespace.html -->
										<module name="FileTabCharacter">
											<property name="eachLine" value="true" />
										</module>
										<module name="TreeWalker">
											<module name="OuterTypeFilename" />
											<module name="IllegalTokenText">
												<property name="tokens"
													value="STRING_LITERAL, CHAR_LITERAL" />
												<property name="format"
													value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
												<property name="message"
													value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
											</module>
											<module name="AvoidEscapedUnicodeCharacters">
												<property name="allowEscapesForControlCharacters"
													value="true" />
												<property name="allowByTailComment" value="true" />
												<property name="allowNonPrintableEscapes"
													value="true" />
											</module>
											<module name="LineLength">
												<property name="max" value="100" />
												<property name="ignorePattern"
													value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
											</module>
											<module name="AvoidStarImport" />
											<module name="OneTopLevelClass" />
											<module name="NoLineWrap" />
											<module name="EmptyBlock">
												<property name="option" value="TEXT" />
												<property name="tokens"
													value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
											</module>
											<module name="NeedBraces" />
											<module name="LeftCurly" />
											<module name="RightCurly">
												<property name="id" value="RightCurlySame" />
												<property name="tokens"
													value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,
                    LITERAL_DO" />
											</module>
											<module name="RightCurly">
												<property name="id" value="RightCurlyAlone" />
												<property name="option" value="alone" />
												<property name="tokens"
													value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,
                    INSTANCE_INIT" />
											</module>
											<module name="WhitespaceAround">
												<property name="allowEmptyConstructors"
													value="true" />
												<property name="allowEmptyLambdas" value="true" />
												<property name="allowEmptyMethods" value="true" />
												<property name="allowEmptyTypes" value="true" />
												<property name="allowEmptyLoops" value="true" />
												<message key="ws.notFollowed"
													value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
												<message key="ws.notPreceded"
													value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
											</module>
											<module name="OneStatementPerLine" />
											<module name="MultipleVariableDeclarations" />
											<module name="ArrayTypeStyle" />
											<module name="MissingSwitchDefault" />
											<module name="FallThrough" />
											<module name="UpperEll" />
											<module name="ModifierOrder" />
											<module name="EmptyLineSeparator">
												<property name="allowNoEmptyLineBetweenFields"
													value="true" />
											</module>
											<module name="SeparatorWrap">
												<property name="id" value="SeparatorWrapDot" />
												<property name="tokens" value="DOT" />
												<property name="option" value="nl" />
											</module>
											<module name="SeparatorWrap">
												<property name="id" value="SeparatorWrapComma" />
												<property name="tokens" value="COMMA" />
												<property name="option" value="EOL" />
											</module>
											<module name="SeparatorWrap">
												<!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
												<property name="id" value="SeparatorWrapEllipsis" />
												<property name="tokens" value="ELLIPSIS" />
												<property name="option" value="EOL" />
											</module>
											<module name="SeparatorWrap">
												<!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
												<property name="id"
													value="SeparatorWrapArrayDeclarator" />
												<property name="tokens" value="ARRAY_DECLARATOR" />
												<property name="option" value="EOL" />
											</module>
											<module name="SeparatorWrap">
												<property name="id" value="SeparatorWrapMethodRef" />
												<property name="tokens" value="METHOD_REF" />
												<property name="option" value="nl" />
											</module>
											<module name="PackageName">
												<property name="format"
													value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
												<message key="name.invalidPattern"
													value="Package name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="TypeName">
												<message key="name.invalidPattern"
													value="Type name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="MemberName">
												<property name="format"
													value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
												<message key="name.invalidPattern"
													value="Member name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="ParameterName">
												<property name="format"
													value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
												<message key="name.invalidPattern"
													value="Parameter name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="LambdaParameterName">
												<property name="format"
													value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
												<message key="name.invalidPattern"
													value="Lambda parameter name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="CatchParameterName">
												<property name="format"
													value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
												<message key="name.invalidPattern"
													value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="LocalVariableName">
												<property name="tokens" value="VARIABLE_DEF" />
												<property name="format"
													value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
												<message key="name.invalidPattern"
													value="Local variable name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="ClassTypeParameterName">
												<property name="format"
													value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
												<message key="name.invalidPattern"
													value="Class type name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="MethodTypeParameterName">
												<property name="format"
													value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
												<message key="name.invalidPattern"
													value="Method type name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="InterfaceTypeParameterName">
												<property name="format"
													value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
												<message key="name.invalidPattern"
													value="Interface type name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="NoFinalizer" />
											<module name="GenericWhitespace">
												<message key="ws.followed"
													value="GenericWhitespace ''{0}'' is followed by whitespace." />
												<message key="ws.preceded"
													value="GenericWhitespace ''{0}'' is preceded with whitespace." />
												<message key="ws.illegalFollow"
													value="GenericWhitespace ''{0}'' should followed by whitespace." />
												<message key="ws.notPreceded"
													value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
											</module>
											<module name="Indentation">
												<property name="basicOffset" value="2" />
												<property name="braceAdjustment" value="0" />
												<property name="caseIndent" value="2" />
												<property name="throwsIndent" value="4" />
												<property name="lineWrappingIndentation" value="4" />
												<property name="arrayInitIndent" value="2" />
											</module>
											<module name="AbbreviationAsWordInName">
												<property name="ignoreFinal" value="false" />
												<property name="allowedAbbreviationLength"
													value="1" />
											</module>
											<module name="OverloadMethodsDeclarationOrder" />
											<module name="VariableDeclarationUsageDistance" />
											<module name="CustomImportOrder">
												<property name="sortImportsInGroupAlphabetically"
													value="true" />
												<property name="separateLineBetweenGroups"
													value="true" />
												<property name="customImportOrderRules"
													value="STATIC###THIRD_PARTY_PACKAGE" />
											</module>
											<module name="MethodParamPad" />
											<module name="NoWhitespaceBefore">
												<property name="tokens"
													value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF" />
												<property name="allowLineBreaks" value="true" />
											</module>
											<module name="ParenPad" />
											<module name="OperatorWrap">
												<property name="option" value="NL" />
												<property name="tokens"
													value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,
                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
											</module>
											<module name="AnnotationLocation">
												<property name="id"
													value="AnnotationLocationMostCases" />
												<property name="tokens"
													value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF" />
											</module>
											<module name="AnnotationLocation">
												<property name="id"
													value="AnnotationLocationVariables" />
												<property name="tokens" value="VARIABLE_DEF" />
												<property name="allowSamelineMultipleAnnotations"
													value="true" />
											</module>
											<module name="NonEmptyAtclauseDescription" />
											<module name="JavadocTagContinuationIndentation" />
											<module name="SummaryJavadoc">
												<property name="forbiddenSummaryFragments"
													value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
											</module>
											<module name="JavadocParagraph" />
											<module name="AtclauseOrder">
												<property name="tagOrder"
													value="@param, @return, @throws, @deprecated" />
												<property name="target"
													value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
											</module>
											<module name="JavadocMethod">
												<property name="scope" value="public" />
												<property name="allowMissingParamTags" value="true" />
												<property name="allowMissingThrowsTags"
													value="true" />
												<property name="allowMissingReturnTag" value="true" />
												<property name="minLineCount" value="2" />
												<property name="allowedAnnotations"
													value="Override, Test" />
												<property name="allowThrowsTagsForSubclasses"
													value="true" />
											</module>
											<module name="MethodName">
												<property name="format"
													value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
												<message key="name.invalidPattern"
													value="Method name ''{0}'' must match pattern ''{1}''." />
											</module>
											<module name="SingleLineJavadoc">
												<property name="ignoreInlineTags" value="false" />
											</module>
											<module name="EmptyCatchBlock">
												<property name="exceptionVariableName"
													value="expected" />
											</module>
											<module name="CommentsIndentation" />
										</module>
									</module>
								</checkstyleRules>
								<encoding>UTF-8</encoding>
								<consoleOutput>true</consoleOutput>
								<failsOnError>true</failsOnError>
								<linkXRef>false</linkXRef>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Use the bnd-maven-plugin and assemble the symbolic names -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<bnd><![CDATA[
Bundle-SymbolicName: ${project.artifactId}
Test-Cases: ${classes;CONCRETE;ANNOTATED;org.junit.Test}
-sources: true
-contract: *
]]></bnd>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>bnd-process</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Required to make the maven-jar-plugin pick up the bnd generated 
					manifest. Also avoid packaging empty Jars -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
						</archive>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>
				<!-- Setup the indexer for running and testing -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-indexer-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<localURLs>REQUIRED</localURLs>
						<attach>false</attach>
					</configuration>
					<executions>
						<execution>
							<id>index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId}</indexName>
							</configuration>
						</execution>
						<execution>
							<id>test-index</id>
							<goals>
								<goal>index</goal>
							</goals>
							<configuration>
								<indexName>${project.artifactId} Test</indexName>
								<outputFile>${project.build.directory}/test-index.xml</outputFile>
								<scopes>
									<scope>test</scope>
								</scopes>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the testing plugin that we use -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-testing-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>testing</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Define the version of the baseline plugin we use and avoid failing 
					when no baseline jar exists. (for example before the first release) -->
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-baseline-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<failOnMissing>false</failOnMissing>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>baseline</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>biz.aQute.bnd</groupId>
					<artifactId>bnd-reporter-maven-plugin</artifactId>
					<version>${bnd.version}</version>
					<configuration>
						<reports>
							<report>
								<parameters>
								</parameters>
							</report>
						</reports>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>readme</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>biz.aQute.bnd</groupId>
				<artifactId>bnd-reporter-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<scm>
		<connection>scm:git:https://github.com/bipolis/org.bipolis.git</connection>
		<developerConnection>scm:git:https://github.com/bipolis/org.bipolis.git</developerConnection>
		<url>https://github.com/bipolis/org.bipolis</url>
	</scm>
</project>